version: '3'

volumes:
  pgdata:

services:

  app:
    build:
      context: .
    volumes:
      - ./src:/src
    ports:
      - 8000:8000
    # command: sh -c run_web.sh
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    container_name: app
    restart: on-failure
    env_file:
      - ./.env.dev
    depends_on:
      - postgres
      - rabbitmq
      - celery_worker
  
  postgres:
    image: postgres:9.6-alpine
    volumes:
      - pgdata:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=db
    ports:
      - 5432:5432  

  rabbitmq:
    image: "rabbitmq:3-management"
    restart: on-failure
    ports:
      - "15672:15672"
      - "5672:5672"

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
      # command: celery worker -A src.morse.celery -Q default --loglevel=info
    command: sh -c "wait-for rabbitmq:5672 && wait-for app:8000 -- celery -A config.celery worker -l info"
    depends_on:
      - rabbitmq
      - postgres
    volumes:
    - ./src:/src
